import Head from "next/head"
import styles from "../../styles/Home.module.css"
import { createUrqlClient } from "../../src/utils/createUrqlClient"
import { withUrqlClient } from "next-urql"
import { useLocationsQuery, useUpdateVisibilityMutation, useUpdateComingSoonMutation } from "../../src/generated/graphql"
import { Fragment } from "react"

const Locations = () => {
  const [isVisible, setVisible] = useUpdateVisibilityMutation()
  const [comingSoon, setComingSoon] = useUpdateComingSoonMutation()
  const [{ data, fetching }] = useLocationsQuery()

  if (!fetching && data.locations) {
    data.locations.map((location) => {
      Object.keys(location).forEach((key) => {
        try {
          location[key] = JSON.parse(location[key])
        } catch {
          location[key] = location[key]
        }
      })
    })
  }
  async function toggleLocationVisible(id, visible) {
    setVisible({
      input: {
        visible: visible,
        yextId: id,
      },
    })
    data.locations.find((location) => location.yextId === id).visible = visible
  }

  async function toggleComingSoon(id, comingSoon) {
    setComingSoon({
      input: {
        comingSoon,
        yextId: id,
      },
    })
    data.locations.find((location) => location.yextId === id).comingSoon = comingSoon
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <table>
          <thead>
            <tr>
              <td>Name</td>
              <td>Address</td>
              <td>Is Visible</td>
              <td>Is coming soon</td>
            </tr>
          </thead>
          <tbody>
            {!fetching && data.locations
              ? data.locations.map((location) => (
                  <tr key={location.id}>
                    <td>
                      <a href={`/locations/${location.c_locationSlug}`}>{location.c_locationName}</a>
                    </td>
                    <td>{location.address.line1} {location.address.city}, {location.address.region}</td>
                    <td>
                      <input type="checkbox" name="visible" checked={location.visible} onChange={() => toggleLocationVisible(location.yextId, !location.visible)} />
                    </td>
                    <td>
                    <input type="checkbox" name="comingSoon" checked={location.comingSoon} onChange={() => toggleComingSoon(location.yextId, !location.comingSoon)} />
                    </td>
                  </tr>
                ))
              : null}
          </tbody>
        </table>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  )
}

export default withUrqlClient(createUrqlClient, { ssr: false })(Locations)
